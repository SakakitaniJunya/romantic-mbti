
// app/page.tsx
'use client';

import { useState } from 'react';
import Link from 'next/link';

//
// 【スコア計算用設定】
// ※各質問の「軸」と「極性」は HTML 内の設定と同じ順序で定義します
//
const questionSettings = [
  // I vs R（質問1～7）
  { q: 1, dimension: "IR", polarity: +1 },
  { q: 2, dimension: "IR", polarity: +1 },
  { q: 3, dimension: "IR", polarity: +1 },
  { q: 4, dimension: "IR", polarity: +1 },
  { q: 5, dimension: "IR", polarity: +1 },
  { q: 6, dimension: "IR", polarity: -1 },
  { q: 7, dimension: "IR", polarity: -1 },
  // L vs H（質問8～14）
  { q: 8,  dimension: "LH", polarity: +1 },
  { q: 9,  dimension: "LH", polarity: +1 },
  { q: 10, dimension: "LH", polarity: +1 },
  { q: 11, dimension: "LH", polarity: -1 },
  { q: 12, dimension: "LH", polarity: -1 },
  { q: 13, dimension: "LH", polarity: -1 },
  { q: 14, dimension: "LH", polarity: -1 },
  // E vs V（質問15～21）
  { q: 15, dimension: "EV", polarity: +1 },
  { q: 16, dimension: "EV", polarity: +1 },
  { q: 17, dimension: "EV", polarity: +1 },
  { q: 18, dimension: "EV", polarity: -1 },
  { q: 19, dimension: "EV", polarity: -1 },
  { q: 20, dimension: "EV", polarity: -1 },
  { q: 21, dimension: "EV", polarity: -1 },
  // T vs D（質問22～28）
  { q: 22, dimension: "TD", polarity: +1 },
  { q: 23, dimension: "TD", polarity: +1 },
  { q: 24, dimension: "TD", polarity: +1 },
  { q: 25, dimension: "TD", polarity: -1 },
  { q: 26, dimension: "TD", polarity: -1 },
  { q: 27, dimension: "TD", polarity: -1 },
  { q: 28, dimension: "TD", polarity: -1 },
];

//
// 【タイプデータ】
// ※各タイプの結果情報（16タイプ分）
const typeData: { 
  [key: string]: { 
    title: string; 
    subtitle: string; 
    description: string;
    detailedAnalysis: {
      strengths: string[];
      challenges: string[];
      loveStyle: string;
      compatibility: string[];
      growth: string[];
    };
    actionPlan: {
      immediate: string[];
      shortTerm: string[];
      longTerm: string[];
    };
    advice: {
      dating: string[];
      relationship: string[];
      communication: string[];
    };
  } 
} = {
  "I-L-E-T": {
    title: "熱烈リード型ロマンチスト",
    subtitle: "ロマンを求めつつ自分で引っ張る情熱家",
    description: "夢見がちな一面と強いリーダーシップが同居したタイプ。理想を相手に押し付けがちにならないよう注意。",
    detailedAnalysis: {
      strengths: [
        "ドラマチックで情熱的な恋愛を演出する天才",
        "パートナーを理想的な方向へ導くリーダーシップ",
        "愛情表現が豊かで、相手に特別感を与える",
        "深いつながりを求め、表面的な関係を嫌う",
        "困難な状況でも愛を貫く強い意志力"
      ],
      challenges: [
        "理想と現実のギャップに苦しみやすい",
        "相手に完璧さを求めすぎる傾向",
        "自分の価値観を押し付けてしまう可能性",
        "感情の起伏が激しく、相手を振り回すことも",
        "現実的な問題を軽視しがち"
      ],
      loveStyle: "映画のような劇的な愛を理想とし、パートナーとともに成長し続ける関係を重視。深い精神的なつながりと情熱的な愛情表現を両立させたい。",
      compatibility: [
        "I-H-V-T（内向的で協調型）：お互いの理想を尊重し合える",
        "R-L-V-D（現実的でバランス型）：足りない部分を補い合える",
        "I-L-V-D（同じ理想主義）：価値観を共有できる"
      ],
      growth: [
        "相手の価値観を尊重する寛容さを身につける",
        "現実的な問題にも目を向ける習慣をつける",
        "感情のコントロール方法を学ぶ",
        "相手のペースに合わせる柔軟性を養う",
        "完璧主義を手放し、不完全さも愛する"
      ]
    },
    actionPlan: {
      immediate: [
        "今日から相手の意見を最後まで聞く習慣をつける",
        "理想と現実のバランスチェックリストを作成",
        "感情的になった時の3秒ルールを実践"
      ],
      shortTerm: [
        "月1回、現実的なデートプランを企画する",
        "相手の価値観について深く話し合う時間を設ける",
        "恋愛以外の趣味や目標も共有する",
        "感情日記をつけて自分のパターンを把握"
      ],
      longTerm: [
        "理想の関係性について相手と共通のビジョンを作る",
        "お互いの成長を支え合えるパートナーシップを構築",
        "現実的な将来設計を一緒に立てる",
        "感情的知性を高めるトレーニングを継続"
      ]
    },
    advice: {
      dating: [
        "初デートでは理想を語りすぎず、相手の話に耳を傾ける",
        "ロマンチックな演出は相手の好みをリサーチしてから",
        "自分の価値観を押し付けずに、共通点を見つける",
        "完璧を求めず、自然な流れを大切にする"
      ],
      relationship: [
        "日常の小さな幸せも大切にする意識を持つ",
        "相手の成長を待つ忍耐力を身につける",
        "理想だけでなく現実的な目標も一緒に設定",
        "感情的になった時は一度冷静になる時間を作る"
      ],
      communication: [
        "自分の理想を説明する時は、相手の立場も考慮する",
        "批判ではなく建設的な提案の形で伝える",
        "相手の良いところを積極的に言葉にする",
        "深刻な話題も相手がリラックスできる環境で"
      ]
    }
  },
  "I-L-E-D": {
    title: "自由奔放なロマン派リーダー",
    subtitle: "理想主導＋リーダー気質＋自分の時間を確保",
    description: "ドラマチックな展開を好みつつ、束縛は苦手。自分らしさを尊重してくれる相手と相性◎。",
    detailedAnalysis: {
      strengths: ["独立心と理想主義のバランス", "自由な発想力", "相手を尊重する姿勢", "クリエイティブなデートプラン", "束縛しない愛情表現"],
      challenges: ["距離感の調整が難しい", "コミットメントへの恐れ", "理想と現実のギャップ", "感情表現が一方的になりがち", "継続性に欠ける場合がある"],
      loveStyle: "自由と理想を両立させた関係を求め、お互いの個性を尊重し合いながらも、深いつながりを大切にしたい。",
      compatibility: ["R-H-V-T（安定志向）", "I-H-V-D（価値観の共有）", "R-L-E-T（現実的リーダー）"],
      growth: ["継続的な関係性の構築方法を学ぶ", "相手への配慮を忘れない", "理想と現実のバランスを取る", "感情の安定性を高める", "コミットメントへの恐れを克服する"]
    },
    actionPlan: {
      immediate: ["相手の価値観を理解する時間を作る", "自分の理想について整理する", "束縛と愛情の違いを明確にする"],
      shortTerm: ["定期的なコミュニケーションの時間を設ける", "共通の趣味や価値観を見つける", "将来について軽やかに話し合う"],
      longTerm: ["お互いの成長を支え合う関係性を築く", "自由と責任のバランスを学ぶ", "長期的なパートナーシップのビジョンを共有"]
    },
    advice: {
      dating: ["相手のペースを尊重する", "自分の自由度について事前に伝える", "理想的な関係性について話し合う", "束縛しない愛情表現を心がける"],
      relationship: ["定期的な関係性の見直しを行う", "お互いの個性を活かせる活動を見つける", "将来への不安を共有する", "自由と愛情の両立を目指す"],
      communication: ["自分の気持ちを素直に表現する", "相手の意見に耳を傾ける時間を作る", "理想論だけでなく現実的な話もする", "束縛と心配の違いを説明する"]
    }
  },
  // 注意：以下のタイプは簡略化版。実装時には全て詳細化が必要
  "I-L-V-T": {
    title: "秘めた情熱のロマン派リーダー",
    subtitle: "内向的に見えて実は理想主導で熱い心を秘めている", 
    description: "普段は控えめだが、好きな相手には強いこだわりを持つ。一人の時間も大切にする繊細な一面がある。深く考えてから行動するため、表面的な関係よりも意味のあるつながりを求める傾向にある。",
    detailedAnalysis: {
      strengths: ["深い愛情と一途さを持つ", "相手を理解しようとする思慮深さ", "質の高い関係性を築く能力", "相手のペースを尊重する配慮", "内面の豊かさと独自の価値観"],
      challenges: ["感情表現が苦手で誤解されやすい", "内向的すぎて機会を逃すことがある", "完璧主義で自分を追い込みがち", "相手に気持ちが伝わりにくい", "表面的な関係が築けない"],
      loveStyle: "深く静かな愛情を育み、相手との精神的なつながりを何より大切にする。時間をかけて信頼関係を築き、お互いの内面を理解し合える関係を理想とする。",
      compatibility: ["I-H-E-D（お互いの内向性を理解）", "R-H-V-T（現実的で安定した相手）", "I-L-E-T（同じ理想主義）"],
      growth: ["感情表現のスキルを身につける", "積極性を少しずつ高める", "相手に気持ちを伝える方法を学ぶ", "完璧主義を和らげる", "表面的な関係も大切にする"]
    },
    actionPlan: {
      immediate: ["今日から相手の話により集中して耳を傾ける", "感情を言葉にする練習を始める", "小さな感謝の気持ちを表現する"],
      shortTerm: ["月1回は自分から誘う練習をする", "相手との共通の趣味を見つける", "感情日記をつけて自分の気持ちを整理", "親しい友人とのコミュニケーション練習"],
      longTerm: ["自然な感情表現ができるようになる", "深い信頼関係を築くスキルを向上", "内向性を活かした恋愛スタイルの確立", "バランスの取れた関係性の構築"]
    },
    advice: {
      dating: ["時間をかけてゆっくりと関係を築く", "相手のペースに合わせつつ自分の気持ちも大切に", "深い話題から始めて表面的な会話は徐々に", "自分の興味のある分野でのデートを提案"],
      relationship: ["信頼関係を何より重視する", "相手の内面を理解しようと努める", "自分の時間と相手の時間のバランスを取る", "言葉だけでなく行動で愛情を示す"],
      communication: ["感情を言葉にする努力を続ける", "相手の話を深く聞く姿勢を大切に", "自分の考えを整理してから伝える", "誤解を避けるため具体的に表現する"]
    }
  },
  "I-L-V-D": {
    title: "自分ワールド主導のロマン派",
    subtitle: "理想は譲れないが、一人の世界も大事にしたい",
    description: "妄想力豊かで自己主張もあるが、干渉されるのは苦手。趣味や世界観を共有できる相手だと長続きしやすい。独自の価値観を大切にしながらも、理想的な恋愛関係を追求したい気持ちが強い。束縛されることなく、お互いの個性を認め合える関係を理想とする。",
    detailedAnalysis: {
      strengths: ["独創的なアイデアと豊かな想像力", "自立心があり精神的に強い", "創造的な恋愛アプローチ", "相手の個性も尊重できる", "深い価値観を持っている"],
      challenges: ["適度な距離感の調整が難しい", "現実逃避の傾向がある", "自分の世界に閉じこもりがち", "相手への配慮が不足することがある", "理想と現実のギャップに悩む"],
      loveStyle: "理想的で自由度の高い恋愛を求め、お互いの個性と独立性を尊重し合いながらも、深いつながりを感じられる関係を大切にしたい。",
      compatibility: ["I-H-E-T（理解のある内向タイプ）", "R-L-V-T（現実的でバランス型）", "I-L-E-D（同じ理想主義）"],
      growth: ["現実と理想のバランスを取る方法を学ぶ", "相手への思いやりを忘れない", "自分の世界と二人の世界の両立", "コミュニケーション力の向上", "長期的な関係性の構築"]
    },
    actionPlan: {
      immediate: ["相手の価値観を理解する時間を設ける", "自分の理想について具体的に考える", "一人の時間と二人の時間のバランスを意識"],
      shortTerm: ["共通の趣味や関心事を見つける活動", "お互いの個性について話し合う機会を作る", "理想的な関係について具体的に話し合う", "相手のペースも尊重する練習"],
      longTerm: ["価値観を共有できる長期的なパートナーシップの構築", "自立と愛情の両立したライフスタイルの確立", "お互いの成長を支え合える関係性", "創造的で充実した共同生活の実現"]
    },
    advice: {
      dating: ["共通の趣味や興味のある分野でのデート", "相手の個性や価値観について質問する", "自分の世界観を無理に押し付けない", "一人の時間の必要性について事前に伝える"],
      relationship: ["お互いの個性を活かせる活動を見つける", "定期的な価値観の確認と調整", "自由と愛情のバランスを保つ", "相手の成長も応援する姿勢"],
      communication: ["自分の価値観を分かりやすく説明する努力", "相手の意見も積極的に聞く", "理想論だけでなく現実的な話も交える", "感情的にならずに冷静に話し合う"]
    }
  },
  "I-H-E-T": {
    title: "溺愛型ロマンチスト", 
    subtitle: "理想を語り合いながら相手との一体感を大事にする",
    description: "愛情表現豊かで絆を深めたいタイプ。相手に寄り添いすぎて自分を見失わないように気をつけよう。",
    detailedAnalysis: {
      strengths: [
        "深い愛情と献身的な姿勢で相手を包み込む",
        "豊かな感情表現で相手に愛を伝える天才",
        "相手の気持ちに敏感で、細やかな配慮ができる",
        "理想的な恋愛関係への憧れが強く、ロマンチック",
        "パートナーとの一体感を重視し、深い絆を築く"
      ],
      challenges: [
        "相手に依存しすぎて自分を見失いがち",
        "愛情の押し付けで相手を重荷に感じさせる可能性",
        "理想と現実のギャップに苦しみやすい",
        "自己犠牲的になりすぎて疲れてしまう",
        "相手の自由度を制限してしまうことがある"
      ],
      loveStyle: "深い精神的なつながりと一体感を求め、相手と心も体も完全に結ばれた関係を理想とする。愛情表現は豊かで、相手に自分のすべてを捧げたい気持ちが強い。",
      compatibility: [
        "R-L-V-D（現実的でクール）：バランスを保てる相手",
        "I-L-V-T（同じ理想主義だが自立的）：価値観を共有しつつ適度な距離",
        "R-H-V-T（安定志向）：安心できる関係性を築ける"
      ],
      growth: [
        "自分自身の時間と空間を確保する重要性を学ぶ",
        "相手の自立性を尊重し、適度な距離感を保つ",
        "理想と現実のバランスを取る現実的な視点を養う",
        "自己犠牲ではない健全な愛情表現を身につける",
        "相手に依存せずとも幸せでいられる自立心を育てる"
      ]
    },
    actionPlan: {
      immediate: [
        "今日から一人の時間を意識的に作る習慣をつける",
        "相手への連絡頻度を見直し、適度な間隔を空ける",
        "自分の感情を客観視する時間を設ける"
      ],
      shortTerm: [
        "月1回は友人や家族との時間を優先する",
        "恋愛以外の趣味や目標を見つけて取り組む",
        "相手のプライベート空間を尊重する練習をする",
        "感情日記をつけて自分の愛情パターンを把握"
      ],
      longTerm: [
        "互いに自立した健全なパートナーシップを築く",
        "依存ではなく相互支援の関係性を確立する",
        "自分らしさを保ちながらも愛情深い関係を維持",
        "理想的な愛情表現のバランスポイントを見つける"
      ]
    },
    advice: {
      dating: [
        "初デートでは相手のペースを尊重し、距離感を大切に",
        "愛情表現は段階的に、相手の反応を見ながら調整",
        "自分の趣味や価値観も積極的にシェアする",
        "相手の話を聞く時間を愛情表現と同じくらい大切に"
      ],
      relationship: [
        "日常的に一人の時間を意識的に作る",
        "相手の友人関係や趣味を積極的に応援する",
        "愛情表現は質を重視し、量で圧倒しない",
        "互いの成長を支え合える関係性を目指す"
      ],
      communication: [
        "感情を伝える時は相手の状況も考慮する",
        "要求ではなく希望として気持ちを表現する",
        "相手の意見や感情も積極的に聞く姿勢を大切に",
        "重要な話は相手がリラックスしている時を選ぶ"
      ]
    }
  },
  "I-H-E-D": {
    title: "夢見がちだけどマイペース",
    subtitle: "ロマンを求めつつも無理はしないスタンス", 
    description: "愛情表現は好きだが、あまり束縛し合わない関係を好む。自分の世界と相手の世界を程よく両立させるのがポイント。",
    detailedAnalysis: {
      strengths: [
        "理想を持ちながらも現実的なバランス感覚を持つ",
        "愛情表現は豊かだが、相手の自由も尊重できる",
        "協調性があり、相手に合わせる柔軟性を持つ",
        "マイペースでストレスを溜めにくい性格",
        "恋愛以外の人間関係も大切にできる広い視野"
      ],
      challenges: [
        "優柔不断で重要な決断を先延ばしにしがち",
        "関係性が曖昧になりやすく、不安を与える可能性",
        "深刻な問題を避けて表面的な関係に留まりやすい",
        "コミットメントを避ける傾向がある",
        "中途半端な愛情表現で相手を混乱させることも"
      ],
      loveStyle: "理想的な恋愛を求めながらも、お互いの自由と個性を尊重した、程よい距離感のある関係を好む。束縛せず束縛されない、軽やかで自然体な愛を理想とする。",
      compatibility: [
        "I-L-E-D（同じく自由志向の理想主義）：価値観が合いやすい",
        "R-H-V-D（現実的で距離感重視）：お互いの自由を尊重",
        "R-L-E-D（現実的だが自立的）：バランスの取れた関係"
      ],
      growth: [
        "重要な決断を先延ばしにせず、明確な意思表示を学ぶ",
        "関係性について定期的に話し合う習慣をつける",
        "表面的な関係から一歩踏み込む勇気を持つ",
        "コミットメントへの恐れを克服し、安定性も大切にする",
        "相手の不安や疑問に真摯に向き合う姿勢を身につける"
      ]
    },
    actionPlan: {
      immediate: [
        "関係性の現状について相手と率直に話し合う",
        "自分の気持ちを整理し、明確にする時間を作る",
        "曖昧な表現を避け、具体的に伝える練習をする"
      ],
      shortTerm: [
        "月1回は将来について軽やかに話し合う機会を設ける",
        "相手の不安や疑問に積極的に答える姿勢を示す",
        "恋愛以外の共通の目標や趣味を見つける",
        "コミットメントレベルについて段階的に話し合う"
      ],
      longTerm: [
        "自由と安定のバランスが取れた関係性を築く",
        "お互いの成長を支援し合えるパートナーシップの確立",
        "明確な将来ビジョンを共有できる関係を目指す",
        "深いつながりと自由度を両立した成熟した愛情関係"
      ]
    },
    advice: {
      dating: [
        "自然体でいながらも、相手への真剣さを伝える",
        "関係の進展について相手と定期的に確認する",
        "自由度を大切にしつつ、相手への配慮も忘れない",
        "曖昧な態度ではなく、誠実で明確なコミュニケーション"
      ],
      relationship: [
        "お互いの自由を尊重しながら、絆も深める",
        "定期的に関係性の見直しと調整を行う",
        "表面的な付き合いから一歩踏み込んだつながりを築く",
        "相手の不安を軽視せず、真摯に向き合う"
      ],
      communication: [
        "曖昧な表現を避け、自分の気持ちを具体的に伝える",
        "相手の質問や不安に対して逃げずに答える",
        "軽やかさと真剣さのバランスを取った会話を心がける",
        "重要な話題も自然な流れの中で取り上げる"
      ]
    }
  },
  "I-H-V-T": {
    title: "慎ましやかな理想追求型",
    subtitle: "派手ではないが深いところでロマンを追い求める",
    description: "じっくりと理想を描き、共感し合えるパートナーとは深く結びつく。",
    detailedAnalysis: {
      strengths: [
        "深く考え抜いた誠実で真摯な愛情を持つ",
        "相手を理解しようとする思慮深さと洞察力",
        "表面的でない、本質的なつながりを重視する",
        "一途で変わらない愛情を持続できる",
        "相手のペースを尊重し、協調性がある"
      ],
      challenges: [
        "内向的で自分から積極的にアプローチできない",
        "感情表現が控えめで相手に伝わりにくい",
        "理想が高すぎて行動に移せないことがある",
        "恥ずかしさや遠慮で機会を逃しやすい",
        "表面的な関係構築が苦手で孤立しがち"
      ],
      loveStyle: "静かで深い愛情を育み、時間をかけて相手との信頼関係を築くことを大切にする。派手な愛情表現よりも、日常の小さな思いやりや一途な気持ちを重視した恋愛スタイル。",
      compatibility: [
        "I-L-E-T（情熱的だが理解がある）：お互いを補い合える",
        "R-H-E-T（安定志向で愛情豊か）：安心できる関係性",
        "I-H-E-T（同じく協調的で愛情深い）：価値観を共有"
      ],
      growth: [
        "小さな一歩から積極性を身につける練習をする",
        "感情を言葉や行動で表現する方法を学ぶ",
        "理想と現実のバランスを取り、行動力を向上させる",
        "自分に自信を持ち、相手との関係を深める勇気を養う",
        "表面的なコミュニケーションスキルも習得する"
      ]
    },
    actionPlan: {
      immediate: [
        "今日から相手への小さな気遣いを意識的に表現する",
        "感謝の気持ちを言葉にして伝える練習を始める",
        "自分の興味や関心事について話してみる"
      ],
      shortTerm: [
        "週1回は自分からデートを提案してみる",
        "相手との共通の趣味や関心事を探す活動をする",
        "感情表現のバリエーションを増やす練習",
        "コミュニケーションスキルの向上に取り組む"
      ],
      longTerm: [
        "自然で誠実な感情表現ができるようになる",
        "深い信頼関係に基づいた安定した恋愛関係の構築",
        "内向性を活かした独自の恋愛スタイルの確立",
        "自信を持って相手と向き合える関係性の実現"
      ]
    },
    advice: {
      dating: [
        "時間をかけてゆっくりと関係を深める",
        "自分の誠実さと思慮深さをアピールポイントにする",
        "相手の話に深く耳を傾け、理解しようと努める",
        "無理に派手なデートをせず、落ち着いた環境を選ぶ"
      ],
      relationship: [
        "信頼関係を何よりも大切にする",
        "日常の小さな思いやりを積み重ねる",
        "相手のペースを尊重しながら、自分のペースも大切にする",
        "言葉だけでなく行動で愛情を示す工夫をする"
      ],
      communication: [
        "内面の豊かさを少しずつでも表現する努力をする",
        "相手の話を深く聞き、共感を示す",
        "自分の考えや感情を整理してから伝える",
        "誤解を避けるため、具体的で明確な表現を心がける"
      ]
    }
  },
  "I-H-V-D": {
    title: "ソフトでゆるいつながりを好むロマン派",
    subtitle: "理想はあるが、ゆったりとした距離感を望む",
    description: "べったりしすぎず、マイペースにロマンを楽しむ。お互いの個性を認め合える関係が理想的。",
    detailedAnalysis: {
      strengths: [
        "穏やかで優しい雰囲気を作り出すのが得意",
        "相手の個性や価値観を尊重する寛容さがある",
        "争いを避け、平和的な関係を維持できる",
        "マイペースで自然体な魅力がある",
        "理想を持ちながらも現実的なバランス感覚を持つ"
      ],
      challenges: [
        "消極的で自分から積極的な行動を取りにくい",
        "関係性が曖昧になりがちで不安を与える可能性",
        "深い話題や重要な決断を避けてしまう傾向",
        "感情表現が控えめで相手に伝わりにくい",
        "コンフリクトを避けすぎて問題を先送りしがち"
      ],
      loveStyle: "穏やかで自由度の高い関係を理想とし、お互いの個性や空間を尊重し合いながらも、静かな愛情を育む。束縛しない、されない、ゆったりとした恋愛スタイルを好む。",
      compatibility: [
        "I-L-V-D（同じく自由で理想主義）：価値観と距離感が合う",
        "R-H-V-D（現実的で穏やか）：安定した穏やかな関係",
        "I-H-E-D（同じく協調的でバランス型）：お互いを理解しやすい"
      ],
      growth: [
        "重要な話題についても逃げずに向き合う勇気を身につける",
        "自分の気持ちや意見をもっと積極的に表現する",
        "関係性について定期的に話し合う習慣をつける",
        "相手の不安や疑問に真摯に応える姿勢を養う",
        "穏やかさを保ちながらも主体性を発揮する方法を学ぶ"
      ]
    },
    actionPlan: {
      immediate: [
        "自分の本当の気持ちを整理し、明確にする時間を作る",
        "相手への感謝や好意を小さなことから表現してみる",
        "関係性について率直に話し合う機会を設ける"
      ],
      shortTerm: [
        "月1回は将来について穏やかに話し合う時間を作る",
        "相手の質問や不安に対して逃げずに答える練習",
        "共通の趣味や価値観を深める活動を増やす",
        "感情表現のバリエーションを広げる努力"
      ],
      longTerm: [
        "穏やかさを保ちつつも深いつながりのある関係を築く",
        "お互いの成長を支え合える安定したパートナーシップ",
        "自分らしさを大切にしながらも相手との絆を深める",
        "平和で調和の取れた長期的な恋愛関係の確立"
      ]
    },
    advice: {
      dating: [
        "リラックスした自然な雰囲気を大切にする",
        "相手のペースに合わせながらも自分のペースも伝える",
        "穏やかな環境でゆっくりと関係を深める",
        "プレッシャーを与えず、自然な流れを大切にする"
      ],
      relationship: [
        "お互いの個性と空間を尊重し合う",
        "定期的に関係性の確認と調整を行う",
        "平和的な問題解決方法を身につける",
        "穏やかな日常を共有し、小さな幸せを大切にする"
      ],
      communication: [
        "優しく穏やかな表現を心がけながらも明確に伝える",
        "相手の話をじっくりと聞く姿勢を大切にする",
        "重要な話題も自然な流れの中で取り上げる",
        "感情を込めた温かいコミュニケーションを意識する"
      ]
    }
  },
  "R-L-E-T": {
    title: "現実を見据えつつ熱意をぶつける主導者",
    subtitle: "地に足をつけてしっかりアプローチ",
    description: "恋愛にも計画性を持ち、積極的にアクション。思い込みで突っ走らないようにバランスを取ることが大切。",
    detailedAnalysis: {
      strengths: [
        "現実的な計画性と豊かな感情表現を両立できる",
        "積極的で頼もしく、相手を安心させるリーダーシップ",
        "目標に向かって着実に行動する実行力がある",
        "愛情表現が分かりやすく、相手に伝わりやすい",
        "長期的な関係を見据えた建設的なアプローチ"
      ],
      challenges: [
        "自分のペースで進めがちで相手を置き去りにする可能性",
        "現実重視すぎて相手のロマンチックな気持ちを軽視しがち",
        "計画通りにいかないとイライラしやすい",
        "相手の感情よりも結果を重視してしまう傾向",
        "強引になりがちで相手にプレッシャーを与えることも"
      ],
      loveStyle: "現実的で計画的なアプローチを取りながらも、豊かな愛情表現で相手との深いつながりを求める。効率的で建設的な恋愛を好み、将来を見据えた真剣な関係を重視する。",
      compatibility: [
        "I-H-V-T（内向的で協調的）：お互いを補完し合える",
        "R-H-E-T（同じく現実的で愛情豊か）：価値観を共有",
        "I-H-E-T（協調的で愛情深い）：バランスの取れた関係"
      ],
      growth: [
        "相手のペースや感情を尊重する配慮を身につける",
        "計画性と柔軟性のバランスを取る方法を学ぶ",
        "相手のロマンチックな気持ちも大切にする姿勢を養う",
        "結果重視だけでなく、プロセスも楽しむ心を育てる",
        "リーダーシップを発揮しつつも相手の意見も聞く姿勢を持つ"
      ]
    },
    actionPlan: {
      immediate: [
        "今日から相手のペースや反応を確認してから行動する",
        "デートプランを立てる時は相手の意見も聞く",
        "愛情表現のタイミングを相手に合わせる練習"
      ],
      shortTerm: [
        "月1回は相手主導のデートや活動を楽しむ",
        "関係の進展について相手と定期的に話し合う",
        "現実的な計画にロマンチックな要素も取り入れる",
        "相手の感情や気持ちに耳を傾ける時間を増やす"
      ],
      longTerm: [
        "現実性とロマンチックさのバランスが取れた関係を築く",
        "お互いのペースを尊重し合える成熟したパートナーシップ",
        "長期的なビジョンを共有しながらも柔軟性のある関係性",
        "リーダーシップと協調性を両立した理想的な恋愛関係"
      ]
    },
    advice: {
      dating: [
        "計画的にアプローチしつつも相手の反応を見ながら調整",
        "現実的なデートプランにサプライズ要素も加える",
        "相手のペースに合わせて関係を進展させる",
        "自分の熱意を相手に押し付けないよう注意する"
      ],
      relationship: [
        "将来の計画について相手と一緒に考える時間を作る",
        "現実的な目標と理想的な夢の両方を大切にする",
        "相手の感情や気持ちの変化に敏感になる",
        "リードしながらも相手の自主性も尊重する"
      ],
      communication: [
        "自分の考えを伝える時は相手の意見も必ず聞く",
        "論理的に説明するだけでなく感情も大切にする",
        "相手の話を最後まで聞いてから自分の意見を述べる",
        "建設的で前向きなコミュニケーションを心がける"
      ]
    }
  },
  "R-L-E-D": {
    title: "自由も欲しいパワフル現実派",
    subtitle: "リーダーシップ＆行動力あり、でも束縛はNo",
    description: "現実的な判断力と強いリーダーシップを持ちながら、自由度の高い関係を求めるバランス型。恋愛においても効率性と実用性を重視し、相手との関係を建設的に発展させようとする一方で、束縛や過度な依存は避けたがる。自立した大人同士の成熟した関係を理想とし、お互いの成長を支え合えるパートナーシップを築きたいと考えている。表面的には頼もしいリーダーだが、内心では自分の自由と時間も大切にしたいという複雑な欲求を持つ。",
    detailedAnalysis: {
      strengths: [
        "強いリーダーシップで相手を引っ張る頼もしさがある",
        "現実的で実用的なアプローチができる",
        "豊かな愛情表現で相手に気持ちを伝える",
        "独立心があり、精神的に自立している",
        "自由度を保ちながらも関係を築く柔軟性"
      ],
      challenges: [
        "束縛されることを嫌い、距離を置きすぎる傾向",
        "コミットメントに対する不安や恐れがある",
        "自分のペースを優先して相手を置き去りにすることも",
        "深い感情的なつながりを避けがち",
        "相手の依存的な愛情を重荷に感じやすい"
      ],
      loveStyle: "自由度の高い関係を求めながらも、豊かな愛情表現で相手との絆を深めたいと思う。束縛されない現実的な恋愛を好み、お互いの独立性を尊重した成熟した関係を理想とする。",
      compatibility: [
        "I-H-V-D（穏やかで自由志向）：お互いの自由を尊重",
        "R-L-V-D（同じく現実的で自立的）：価値観と距離感が合う",
        "I-L-E-D（理想主義だが自由志向）：自立性を理解し合える"
      ],
      growth: [
        "コミットメントへの恐れを克服し、安定した関係も築く",
        "自由と責任のバランスを学び、相手への配慮を忘れない",
        "表面的でない深いつながりの価値を理解する",
        "相手の感情的なニーズにも応える努力をする",
        "長期的な関係における自由の意味を再定義する"
      ]
    },
    actionPlan: {
      immediate: [
        "関係性の期待値について相手と明確に話し合う",
        "自由度の必要性を説明しつつ相手への愛情も伝える",
        "束縛と愛情の違いを相手と共有する"
      ],
      shortTerm: [
        "月1回は将来について軽やかに話し合う機会を設ける",
        "自立性を保ちつつも相手との時間を大切にする",
        "相手の不安や心配に真摯に向き合う",
        "自由と責任のバランスについて学び実践する"
      ],
      longTerm: [
        "自由度を保ちながらも深いつながりのある関係を築く",
        "成熟した大人の恋愛関係を確立する",
        "お互いの成長を支え合える自立したパートナーシップ",
        "長期的なビジョンを共有しながら個々の自由も尊重"
      ]
    },
    advice: {
      dating: [
        "お互いの自由と独立性を尊重することを最初に伝える",
        "束縛しない・されないことの良さをアピール",
        "現実的な関係性の進展を提案する",
        "自分のライフスタイルを理解してもらう努力をする"
      ],
      relationship: [
        "独立性を保ちながらも相手への愛情は積極的に表現",
        "定期的に関係性の見直しと調整を行う",
        "相手の不安を軽視せず、真摯に向き合う",
        "自由な関係の中にも安定感を作る工夫をする"
      ],
      communication: [
        "率直で現実的なコミュニケーションを心がける",
        "自分の価値観を説明する時は相手の立場も考慮",
        "束縛と愛情、自由と無責任の違いを明確に伝える",
        "感情論ではなく建設的な話し合いを重視する"
      ]
    }
  },
  "R-L-V-T": {
    title: "クールな現実主導型",
    subtitle: "積極的に進めたいが、派手な感情表現は苦手",
    description: "感情をあまり見せないため、相手に分かりやすいコミュニケーションを意識したい。",
    detailedAnalysis: {
      strengths: [
        "現実的で計画性があり、安定した関係を築ける",
        "強いリーダーシップで相手を導く頼もしさがある",
        "冷静な判断力で問題を解決する能力が高い",
        "一途で誠実、浮気などの心配がない安心感",
        "長期的な視点で関係を築く責任感がある"
      ],
      challenges: [
        "感情表現が苦手で冷たい印象を与えがち",
        "相手のロマンチックな気持ちを理解しにくい",
        "愛情を言葉ではなく行動でしか示せない",
        "相手の感情的なニーズに気づきにくい",
        "情緒的なつながりよりも実用性を重視してしまう"
      ],
      loveStyle: "現実的で安定した関係を重視し、言葉よりも行動で愛情を示したいと思う。派手なロマンスよりも、日常的な支えや信頼関係を大切にした堅実な恋愛スタイルを好む。",
      compatibility: [
        "I-H-E-T（愛情豊かで理解がある）：感情面を補ってもらえる",
        "R-H-E-T（同じく現実的だが愛情豊か）：バランスの取れた関係",
        "I-H-V-T（同じく内向的で誠実）：お互いを理解しやすい"
      ],
      growth: [
        "感情を言葉で表現する方法を学び実践する",
        "相手のロマンチックなニーズにも応える努力をする",
        "愛情表現のバリエーションを増やす",
        "相手の感情に敏感になる練習をする",
        "実用性だけでなく情緒的な価値も大切にする"
      ]
    },
    actionPlan: {
      immediate: [
        "今日から愛情を言葉で表現する練習を始める",
        "相手の好きなところを具体的に伝えてみる",
        "感謝の気持ちを口に出して言う習慣をつける"
      ],
      shortTerm: [
        "週1回は感情的な会話をする時間を作る",
        "愛情表現の方法について相手から学ぶ",
        "ロマンチックなデートプランを時々企画する",
        "相手の感情的なニーズを聞いて理解する努力"
      ],
      longTerm: [
        "言葉と行動の両方で愛情を表現できるようになる",
        "相手の感情に敏感で理解のあるパートナーになる",
        "安定性と温かさを両立した理想的な関係を築く",
        "現実的でありながらもロマンチックな要素も大切にする"
      ]
    },
    advice: {
      dating: [
        "行動で示すだけでなく、言葉でも気持ちを伝える努力",
        "相手のロマンチックな期待にも応える工夫をする",
        "計画的なデートに時々サプライズも加える",
        "自分なりの愛情表現方法を見つける"
      ],
      relationship: [
        "安定性を提供しつつ、感情的なつながりも大切にする",
        "相手の感情の変化に気づく努力をする",
        "日常的な支えと愛情表現の両方を心がける",
        "現実的な目標と感情的な満足の両方を追求"
      ],
      communication: [
        "分かりやすく具体的な表現を心がける",
        "感情的な話題も避けずに向き合う",
        "相手の気持ちを理解しようとする姿勢を示す",
        "冷静さを保ちつつも温かみのある言葉遣い"
      ]
    }
  },
  "R-L-V-D": {
    title: "サバサバ×自立志向リーダー",
    subtitle: "お互いの自由を尊重したクールなリーダータイプ",
    description: "干渉されるのは好まない。あっさりしすぎて冷たい印象を与えないよう注意。",
    detailedAnalysis: {
      strengths: [
        "強い自立心で相手に依存せず、健全な関係を築ける",
        "現実的で合理的な判断ができる",
        "リーダーシップがありながらも相手の自由を尊重",
        "サバサバした性格で付き合いやすい",
        "感情に振り回されず冷静な対応ができる"
      ],
      challenges: [
        "冷たい印象を与えて相手を不安にさせがち",
        "感情表現が苦手で愛情が伝わりにくい",
        "距離を置きすぎて関係が深まりにくい",
        "相手の感情的なニーズを軽視してしまう傾向",
        "ドライすぎて相手が寂しさを感じることも"
      ],
      loveStyle: "クールで自立した関係を理想とし、お互いの自由と独立性を尊重し合う。感情的になりすぎず、理性的で合理的な恋愛を好む。束縛しない・されない大人の関係を求める。",
      compatibility: [
        "R-L-E-D（同じく自立的でリーダー気質）：価値観が合いやすい",
        "I-H-V-D（穏やかで自由志向）：お互いの距離感を理解",
        "R-H-V-D（同じく現実的で距離感重視）：似た恋愛観"
      ],
      growth: [
        "適度な温かみと愛情表現を身につける",
        "相手の感情的なニーズにも応える努力をする",
        "冷静さを保ちながらも親しみやすさを表現",
        "自立性を保ちつつも深いつながりも大切にする",
        "合理性だけでなく感情の価値も理解する"
      ]
    },
    actionPlan: {
      immediate: [
        "相手への関心と配慮を言葉で表現してみる",
        "冷たく感じさせないよう温かい言葉遣いを意識",
        "適度なスキンシップや愛情表現を取り入れる"
      ],
      shortTerm: [
        "週1回は感情について話し合う時間を設ける",
        "相手の感情的なニーズを理解する努力をする",
        "自分の気持ちも率直に伝える練習をする",
        "デートに温かみのある要素を加える工夫"
      ],
      longTerm: [
        "自立性を保ちながらも深いつながりのある関係を築く",
        "クールさと温かさのバランスが取れたパートナーシップ",
        "お互いを理解し尊重し合える成熟した恋愛関係",
        "感情的な満足と実用的な関係の両立"
      ]
    },
    advice: {
      dating: [
        "適度な関心と配慮を言葉や行動で示す",
        "クールさを保ちつつも親しみやすさも表現",
        "相手の話に興味を持って聞く姿勢を示す",
        "自分のライフスタイルを理解してもらいつつ配慮も忘れない"
      ],
      relationship: [
        "自立性を大切にしながらも愛情は積極的に表現",
        "相手の感情的なニーズも理解し応える努力",
        "定期的に関係性について話し合う機会を作る",
        "冷たい印象を与えないよう温かいコミュニケーション"
      ],
      communication: [
        "冷静で合理的でありながらも温かみのある表現",
        "相手の感情を軽視せず理解しようとする姿勢",
        "自分の気持ちも率直に伝える努力をする",
        "建設的で前向きな話し合いを心がける"
      ]
    }
  },
  "R-H-E-T": {
    title: "生活感重視だけど情熱的協調型",
    subtitle: "安定重視＋豊かな感情表現で二人の絆を深める",
    description: "堅実さとロマンのバランス感が強み。安定を求めつつ、感情表現も大切にする。",
    detailedAnalysis: {
      strengths: [
        "安定した関係を築きながらも豊かな愛情表現ができる",
        "現実的で堅実なアプローチで相手を安心させる",
        "協調性が高く相手とのバランスを大切にする",
        "日常的な小さな幸せを大切にし、継続的な愛情表現",
        "信頼関係を重視し、長期的な目線で関係を築く"
      ],
      challenges: [
        "安定を求めるあまりマンネリ化しやすい",
        "新鮮さやサプライズを作り出すのが苦手",
        "理想や夢より現実を優先して相手を物足りなくさせることも",
        "刺激不足で相手が退屈する可能性",
        "安定志向が強すぎて冒険や挑戦を避けがち"
      ],
      loveStyle: "安定した基盤の上で豊かな愛情表現をし、相手との深い絆を育みたい。日常の中にある小さな幸せを大切にし、着実で持続的な恋愛を理想とする。",
      compatibility: [
        "R-L-E-T（同じく現実的で愛情豊か）：価値観が一致しやすい",
        "I-H-V-T（内向的で協調的）：お互いを理解し合える",
        "R-H-V-T（同じく安定志向）：安心できる関係性"
      ],
      growth: [
        "日常に小さな新鮮さやサプライズを取り入れる",
        "相手の理想や夢にも耳を傾け、共に追求する",
        "安定の中にも成長や変化を取り入れる柔軟性",
        "マンネリを防ぎ、関係を活性化させる工夫",
        "安定と刺激のバランスを取る方法を学ぶ"
      ]
    },
    actionPlan: {
      immediate: [
        "今日から日常の中で小さなロマンティックな行為をしてみる",
        "相手への感謝や愛情を言葉で積極的に伝える",
        "いつもと少し違うデートやアクティビティを提案してみる"
      ],
      shortTerm: [
        "週1回は新しい体験や場所を一緒に楽しむ",
        "相手の理想や夢について話し合う時間を作る",
        "関係に新鮮さを保つための工夫を継続的に行う",
        "感情表現のバリエーションを増やす努力"
      ],
      longTerm: [
        "安定した土台の上で成長し続ける関係を築く",
        "お互いを支え合い、高め合えるパートナーシップ",
        "日常の幸せと特別な思い出の両方を大切にする関係",
        "成熟した安定した長期的なパートナーシップの確立"
      ]
    },
    advice: {
      dating: [
        "堅実さをアピールしつつも楽しさや新鮮さも取り入れる",
        "相手の話に真剣に耳を傾け、理解しようとする",
        "安心感を与えながらもサプライズやロマンスも大切に",
        "自分の感情を素直に表現し、相手との絆を深める"
      ],
      relationship: [
        "安定した関係の中にも新しい要素や変化を取り入れる",
        "相手の成長や変化を支え、一緒に成長する",
        "日常的な小さな幸せを積み重ね、絆を深める",
        "相手の理想や夢も尊重し、共に追求する姿勢"
      ],
      communication: [
        "愛情を積極的に言葉で表現し、相手に伝える",
        "感情を込めた温かいコミュニケーションを心がける",
        "相手の話を最後まで聞き、理解しようとする姿勢",
        "安心できる環境で本音を語り合う時間を大切に"
      ]
    }
  },
  "R-H-E-D": {
    title: "程よい情熱と現実感を両立するタイプ",
    subtitle: "深追いはしないが愛情は大事にするバランスタイプ",
    description: "自然体の恋愛を好み、束縛やドラマティックすぎるのは苦手。バランスの取れた関係を築く。",
    detailedAnalysis: {
      strengths: [
        "バランスの取れた現実的な恋愛アプローチ",
        "自然体で無理のない愛情表現ができる",
        "相手のペースを尊重しつつ、自分の気持ちも伝えられる",
        "協調性があり、相手とのコンフリクトを避ける",
        "適度な距離感で相手にプレッシャーを与えない"
      ],
      challenges: [
        "中途半端になりがちで、決断力に欠けることも",
        "深いつながりを築くのが苦手で表面的になりがち",
        "感情の起伏が少なく、相手を物足りなくさせる可能性",
        "コミットメントを避けがちで関係が曖昧になる",
        "マンネリ化しやすく、新鮮さに欠ける"
      ],
      loveStyle: "自然体でバランスの取れた恋愛を理想とし、激しすぎず淡白すぎない、程よい距離感で互いの自由を尊重し合う関係を好む。",
      compatibility: [
        "I-H-E-D（同じくバランス型で協調的）：お互いを理解し合える",
        "R-H-V-D（同じく現実的で距離感重視）：似た価値観",
        "I-H-V-D（穏やかでバランス型）：穏やかな関係性"
      ],
      growth: [
        "表面的な関係から一歩踏み込んだ深いつながりを築く",
        "重要な決断を先延ばしにせず、明確な意思表示を学ぶ",
        "感情表現の幅を広げ、相手への愛情をより明確に",
        "マンネリ化を防ぎ、関係に新鮮さを保つ工夫",
        "コミットメントに対する恐れを克服し、安定した関係を築く"
      ]
    },
    actionPlan: {
      immediate: [
        "関係性の現状を相手と率直に話し合う",
        "自分の気持ちをもっと積極的に表現してみる",
        "相手との深い話し合いの時間を作る"
      ],
      shortTerm: [
        "共通の目標や将来について話し合う機会を設ける",
        "関係性に新しい要素や活動を取り入れる",
        "相手の不安や疑問に真正面から向き合う",
        "感情表現のバリエーションを増やす努力"
      ],
      longTerm: [
        "深く安定した長期的なパートナーシップの築く",
        "バランスを保ちながらも成長し続ける関係性",
        "お互いを理解し尊重し合える成熟した恋愛関係",
        "安定感と新鮮さの両立した理想的な関係"
      ]
    },
    advice: {
      dating: [
        "自然体で接しながらも、相手への真剣さも伝える",
        "プレッシャーをかけすぎず、相手のペースを尊重",
        "時にはサプライズやロマンティックな要素も取り入れる",
        "相手の話に真剣に耳を傾け、理解しようとする"
      ],
      relationship: [
        "バランスを保ちながらも、時には情熱的な面も見せる",
        "日常的なコミュニケーションを大切にする",
        "相手の成長や変化を支え、一緒に成長する",
        "安定と新鮮さの両方を大切にする関係を築く"
      ],
      communication: [
        "率直で優しい表現を心がける",
        "曖昧な表現を避け、明確で誠実なコミュニケーション",
        "相手の話を最後まで聞き、理解しようとする姿勢",
        "重要な話題も自然な流れの中で取り上げる"
      ]
    }
  },
  "R-H-V-T": {
    title: "安定と協調を大事にする堅実派",
    subtitle: "大騒ぎはしないが、しっかりとした絆を築きたい",
    description: "派手さはないが、心強いパートナーになりやすい。安定を重視し、長続きしやすい。",
    detailedAnalysis: { strengths: ["安定性", "信頼性", "協調性"], challenges: ["退屈さ", "受け身"], loveStyle: "安定した堅実な愛", compatibility: ["安定志向の相手"], growth: ["積極性の向上"] },
    actionPlan: { immediate: ["小さなサプライズ"], shortTerm: ["関係性の活性化"], longTerm: ["長期安定関係"] },
    advice: { dating: ["信頼関係を重視"], relationship: ["安定の中にも楽しさを"], communication: ["誠実で穏やか"] }
  },
  "R-H-V-D": {
    title: "ほどよい距離感を好む堅実派",
    subtitle: "恋人とも一定の距離を保ちつつ、安定を求める",
    description: "生活ペースや自由を大事にするタイプ。近づきすぎず離れすぎずが理想。",
    detailedAnalysis: { strengths: ["バランス感覚", "安定性", "自立性"], challenges: ["距離感", "深いつながり不足"], loveStyle: "適度な距離の安定した愛", compatibility: ["同じく距離感を重視する相手"], growth: ["より深い絆の構築"] },
    actionPlan: { immediate: ["適切な距離感の確認"], shortTerm: ["深いコミュニケーション"], longTerm: ["バランスの取れた長期関係"] },
    advice: { dating: ["お互いのペース尊重"], relationship: ["距離感と親密さのバランス"], communication: ["穏やかで率直に"] }
  }
};

//
// 【質問テキスト】
// ※グループごとに見出しを出しつつ、全28問を定義
//
const questions = [
  // 軸1: I vs R (理想追求 vs 現実重視)
  { id: 1, text: "恋愛では、映画のようなロマンチックなシチュエーションに憧れる" },
  { id: 2, text: "「運命の出会い」や「奇跡的なつながり」といった特別感を大切にしたい" },
  { id: 3, text: "デートは華やかで非日常的な体験を重視する" },
  { id: 4, text: "理想の恋愛について空想したり妄想したりするのが好き" },
  { id: 5, text: "恋愛関係では、ドラマティックな展開や感動的なエピソードを求めてしまう" },
  { id: 6, text: "恋愛でも現実的な判断を優先し、地に足をつけて考える" },
  { id: 7, text: "恋愛は人生の一部であり、過度にロマンチックになりすぎないよう心がける" },
  
  // 軸2: L vs H (主導型 vs 協調型)
  { id: 8, text: "恋愛関係では自分がリードし、積極的にアプローチしたい" },
  { id: 9, text: "デートプランや関係の進展は、自分主導で決めることが多い" },
  { id: 10, text: "自分の提案や判断に相手が応じてくれると、とても嬉しく感じる" },
  { id: 11, text: "恋愛では相手との合意を重視し、一方的に決めることは避けたい" },
  { id: 12, text: "相手の気持ちや意見を優先して、自分の希望は後回しにしがち" },
  { id: 13, text: "自分がリードしなくても、相手が主導してくれれば満足" },
  { id: 14, text: "相手にリードしてもらう方が、安心感や心地よさを感じる" },
  
  // 軸3: E vs V (感情表現豊か vs 内面に秘める)
  { id: 15, text: "好きになった相手には、愛情を言葉ではっきりと伝える" },
  { id: 16, text: "スキンシップや身体的な愛情表現を大切にする" },
  { id: 17, text: "恋愛感情が高まったとき、その気持ちを素直に表現してしまう" },
  { id: 18, text: "自分の本当の気持ちを相手に伝えるのは得意ではない" },
  { id: 19, text: "恋人から「何を考えているかわからない」と言われることがある" },
  { id: 20, text: "愛情表現は控えめで、あまり感情をオープンにしない方が自分らしい" },
  { id: 21, text: "どんなに好きでも、はしゃぎすぎずに冷静さを保とうとする" },
  
  // 軸4: T vs D (深い結びつき vs 適度な距離)
  { id: 22, text: "恋人とは可能な限り多くの時間を一緒に過ごしたい" },
  { id: 23, text: "好きな人とは頻繁に連絡を取り合い、常につながっていたい" },
  { id: 24, text: "恋人と「二人だけの特別な世界」を築くことに深い喜びを感じる" },
  { id: 25, text: "恋人がいても、一人の時間や個人的な空間は絶対に必要" },
  { id: 26, text: "一緒にいる時でも、それぞれが自分のしたいことをする時間が欲しい" },
  { id: 27, text: "自分だけのプライベートな領域が侵害されると、強いストレスを感じる" },
  { id: 28, text: "友人関係や趣味など、恋愛以外の人間関係や活動も大切にしたい" }
];

export default function TestPage() {
  const [currentStep, setCurrentStep] = useState(0);
  const [answers, setAnswers] = useState<{ [key: string]: number }>({});
  const [showDetailedReport, setShowDetailedReport] = useState(true);
  const [activeTab, setActiveTab] = useState('analysis');
  const [showCompatibilityMatcher, setShowCompatibilityMatcher] = useState(false);
  const [partnerType, setPartnerType] = useState('');
  const [userProgress, setUserProgress] = useState({
    completedTests: 0,
    lastTestDate: null as Date | null,
    improvements: [] as string[]
  });
  const [result, setResult] = useState<{
    typeKey: string;
    title: string;
    subtitle: string;
    description: string;
  } | null>(null);

  const steps = [
    { title: "理想 vs 現実", subtitle: "恋愛におけるあなたの基本スタンス", icon: "🌌", questions: questions.slice(0, 7) },
    { title: "主導 vs 協調", subtitle: "恋愛関係での主導権に対するあなたの傾向", icon: "🎯", questions: questions.slice(7, 14) },
    { title: "表現 vs 内向", subtitle: "感情表現の仕方とコミュニケーションスタイル", icon: "💫", questions: questions.slice(14, 21) },
    { title: "密着 vs 距離", subtitle: "パートナーとの理想的な距離感", icon: "💞", questions: questions.slice(21, 28) }
  ];

  const handleAnswerChange = (questionId: number, value: number) => {
    setAnswers(prev => ({
      ...prev,
      [`q${questionId}`]: value
    }));
  };

  const handleNext = () => {
    if (currentStep < steps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      calculateResult();
    }
  };

  const handlePrev = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const isStepComplete = () => {
    const currentQuestions = steps[currentStep].questions;
    return currentQuestions.every(q => answers[`q${q.id}`] !== undefined);
  };

  const calculateCompatibility = (type1: string, type2: string): number => {
    if (!type1 || !type2) return 0;
    
    const [i1, l1, e1, t1] = type1.split('-');
    const [i2, l2, e2, t2] = type2.split('-');
    
    let score = 0;
    
    // 理想/現実の相性（補完関係が良い）
    if (i1 !== i2) score += 25;
    else score += 15;
    
    // 主導/協調の相性（一方がリード、一方が協調が理想）
    if (l1 !== l2) score += 30;
    else score += 10;
    
    // 表現/内向の相性（同じタイプが理想）
    if (e1 === e2) score += 25;
    else score += 15;
    
    // 密着/距離の相性（似ている方が良い）
    if (t1 === t2) score += 20;
    else score += 10;
    
    return Math.min(score, 100);
  };

  const calculateResult = () => {
    let scoreIR = 0,
      scoreLH = 0,
      scoreEV = 0,
      scoreTD = 0;

    questionSettings.forEach((qs) => {
      const selectedValue = answers[`q${qs.q}`];
      if (!selectedValue) return;
      const subScore = (selectedValue - 3) * qs.polarity;
      switch (qs.dimension) {
        case "IR":
          scoreIR += subScore;
          break;
        case "LH":
          scoreLH += subScore;
          break;
        case "EV":
          scoreEV += subScore;
          break;
        case "TD":
          scoreTD += subScore;
          break;
      }
    });

    const typeIorR = scoreIR >= 0 ? "I" : "R";
    const typeLorH = scoreLH >= 0 ? "L" : "H";
    const typeEorV = scoreEV >= 0 ? "E" : "V";
    const typeTorD = scoreTD >= 0 ? "T" : "D";
    const finalTypeKey = `${typeIorR}-${typeLorH}-${typeEorV}-${typeTorD}`;

    if (typeData[finalTypeKey]) {
      setResult({
        typeKey: finalTypeKey,
        title: typeData[finalTypeKey].title,
        subtitle: typeData[finalTypeKey].subtitle,
        description: typeData[finalTypeKey].description,
      });
      
      // 進捗を更新
      setUserProgress(prev => ({
        ...prev,
        completedTests: prev.completedTests + 1,
        lastTestDate: new Date()
      }));
    } else {
      setResult(null);
    }
  };

  return (
    <div className="container" style={{ padding: "20px" }}>
      {/* 背景の浮かぶハート */}
      <div className="floating-hearts">
        {[...Array(6)].map((_, i) => (
          <div
            key={i}
            className="heart"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              fontSize: `${Math.random() * 2 + 1}rem`,
              animationDelay: `${Math.random() * 6}s`,
            }}
          >
            💕
          </div>
        ))}
      </div>

      {/* ヒーローヘッダー */}
      <header className="fade-in" style={{
        width: "100%",
        padding: "80px 20px",
        textAlign: "center",
        color: "var(--accent-color)",
        position: "relative",
        overflow: "hidden",
      }}>
        <div style={{
          position: "absolute",
          top: 0,
          left: 0,
          width: "120%",
          height: "120%",
          background: "radial-gradient(circle at 30% 40%, rgba(255, 107, 157, 0.1) 0%, transparent 70%)",
          pointerEvents: "none",
          transform: "translate(-10%, -10%)",
        }}></div>
        
        <div style={{ position: "relative", zIndex: 1 }}>
          <h1 className="gradient-text" style={{
            fontSize: "3.5rem",
            margin: 0,
            marginBottom: "20px",
            fontWeight: 800,
            letterSpacing: "-1px",
            textShadow: "0 4px 8px rgba(255, 107, 157, 0.3)",
          }}>
            🌹 RMPI（Romantic Mode Personality Indicator）
          </h1>
          <p style={{
            fontSize: "1.3rem",
            marginBottom: "30px",
            lineHeight: 1.8,
            color: "var(--text-light)",
            maxWidth: "700px",
            margin: "0 auto 30px",
          }}>
            恋愛特化型MBTI診断システム<br />
            分人理論に基づく科学的恋愛パーソナリティ分析
          </p>
          
          <div style={{ display: "flex", gap: "15px", justifyContent: "center", flexWrap: "wrap", marginBottom: "30px" }}>
            <div className="premium-badge shimmer" style={{ 
              animation: "float 2s ease-in-out infinite",
              background: "var(--premium-gradient)",
              boxShadow: "0 4px 15px rgba(217, 70, 239, 0.3)",
              border: "1px solid rgba(255, 255, 255, 0.2)",
              position: "relative",
              overflow: "hidden"
            }}>
              ✨ AI恋愛コーチング（開発中）
            </div>
            {userProgress.completedTests > 0 && (
              <div className="premium-badge" style={{
                background: "var(--success-color)",
                animation: "float 2.5s ease-in-out infinite",
                boxShadow: "0 4px 15px rgba(16, 185, 129, 0.3)"
              }}>
                🎯 診断回数: {userProgress.completedTests}回
              </div>
            )}
            <div className="premium-badge" style={{
              background: "var(--secondary-color)",
              animation: "float 3s ease-in-out infinite",
              boxShadow: "0 4px 15px rgba(139, 92, 246, 0.3)"
            }}>
              📊 分人理論ベース
            </div>
          </div>
        </div>
      </header>

      {/* グラスカード＋ナビゲーション */}
      <div className="glass-card slide-up" style={{
        padding: "40px",
        textAlign: "center",
        marginBottom: "40px",
      }}>
        <h2 style={{ 
          fontSize: "1.8rem", 
          marginBottom: "20px",
          fontWeight: 700,
          color: "var(--accent-color)"
        }}>
          分人理論×恋愛分析の革新的アプローチ
        </h2>
        <div style={{ 
          textAlign: "left", 
          marginBottom: "30px",
          background: "rgba(255, 107, 157, 0.05)",
          padding: "25px",
          borderRadius: "15px",
          border: "1px solid rgba(255, 107, 157, 0.1)"
        }}>
          <h3 style={{ 
            color: "var(--primary-color)", 
            marginBottom: "15px",
            fontSize: "1.2rem",
            fontWeight: 600
          }}>
            🧠 なぜ恋愛特化型なのか？
          </h3>
          <p style={{ 
            color: "var(--text-color)", 
            fontSize: "1rem", 
            lineHeight: 1.7,
            marginBottom: "15px"
          }}>
            私たちは日常での性格と、<strong>恋愛時の性格が必ずしも一致しない</strong>ことを経験的に知っています。
            これは「分人」という考え方――<strong>状況や関係性ごとに異なる自分が存在する</strong>という心理学的な視点に基づいています。
          </p>
          <p style={{ 
            color: "var(--text-color)", 
            fontSize: "1rem", 
            lineHeight: 1.7,
            marginBottom: "15px"
          }}>
            従来のMBTIなどの性格診断は「日常生活での性格傾向」を把握するものですが、
            恋愛においてはしばしば全く異なる行動や思考を見せることがあります。
          </p>
          <div style={{
            background: "var(--love-gradient)",
            color: "white",
            padding: "15px",
            borderRadius: "10px",
            fontWeight: 600,
            textAlign: "center"
          }}>
            💡 恋愛という特殊な文脈での「分人」を明確化し、MBTIのような16タイプで体系化
          </div>
        </div>
        
        
        <div style={{ display: "flex", justifyContent: "center", gap: "15px", flexWrap: "wrap" }}>
          <Link href="/types" style={{ textDecoration: "none" }}>
            <button className="btn-secondary" style={{ 
              background: "var(--rose-gradient)",
              boxShadow: "0 8px 24px rgba(217, 70, 239, 0.4)",
              color: "white",
              border: "2px solid rgba(255, 255, 255, 0.2)"
            }}>
              📋 16タイプ一覧を見る
            </button>
          </Link>
          <Link href="/about" style={{ textDecoration: "none" }}>
            <button className="btn-secondary" style={{
              background: "var(--secondary-color)",
              boxShadow: "0 8px 24px rgba(139, 92, 246, 0.4)",
              color: "white",
              border: "2px solid rgba(255, 255, 255, 0.2)"
            }}>
              🧠 分人理論について
            </button>
          </Link>
        </div>
      </div>

      {/* 診断フォーム - ステップ形式 */}
      {!result && (
        <div className="glass-card" style={{ padding: "40px", marginBottom: "40px" }}>
          {/* 進捗バー */}
          <div style={{ marginBottom: "40px" }}>
            <div style={{
              display: "flex",
              justifyContent: "space-between",
              marginBottom: "10px",
              fontSize: "0.9rem",
              color: "var(--text-light)"
            }}>
              <span>ステップ {currentStep + 1} / {steps.length}</span>
              <span>{Math.round(((currentStep + 1) / steps.length) * 100)}% 完了</span>
            </div>
            <div style={{
              width: "100%",
              height: "8px",
              background: "rgba(255, 107, 157, 0.1)",
              borderRadius: "4px",
              overflow: "hidden"
            }}>
              <div style={{
                width: `${((currentStep + 1) / steps.length) * 100}%`,
                height: "100%",
                background: "var(--love-gradient)",
                transition: "width 0.3s ease",
                borderRadius: "4px"
              }}></div>
            </div>
          </div>

          {/* 現在のステップ */}
          <div className="glass-card" style={{ padding: "30px", marginBottom: "30px" }}>
            <div style={{ textAlign: "center", marginBottom: "30px" }}>
              <div style={{ fontSize: "3rem", marginBottom: "15px" }}>
                {steps[currentStep].icon}
              </div>
              <h2 style={{
                fontWeight: 700,
                color: "var(--accent-color)",
                fontSize: "1.8rem",
                marginBottom: "10px",
              }}>
                {steps[currentStep].title}
              </h2>
              <p style={{
                color: "var(--text-light)",
                fontSize: "1.1rem",
                lineHeight: 1.6
              }}>
                {steps[currentStep].subtitle}
              </p>
            </div>

            {/* 質問リスト */}
            {steps[currentStep].questions.map((q, index) => (
              <div
                key={q.id}
                className="question glass-card fade-in"
                style={{
                  margin: "20px auto",
                  padding: "25px",
                  maxWidth: "700px",
                  transition: "all 0.3s ease",
                  animationDelay: `${index * 0.1}s`
                }}
              >
                <p style={{
                  marginBottom: "20px",
                  fontWeight: 500,
                  color: "#555",
                  fontSize: "1.1rem",
                  textAlign: "center",
                  lineHeight: 1.6
                }}>
                  {q.text}
                </p>
                
                <div style={{
                  display: "flex",
                  justifyContent: "space-between",
                  marginBottom: "15px",
                  fontWeight: 600,
                  color: "#666",
                  fontSize: "0.8rem",
                  padding: "0 10px",
                }}>
                  <span>当てはまらない</span>
                  <span>やや当てはまらない</span>
                  <span>どちらでもない</span>
                  <span>やや当てはまる</span>
                  <span>当てはまる</span>
                </div>
                
                <div style={{
                  display: "flex",
                  justifyContent: "center",
                  gap: "15px",
                  flexWrap: "wrap",
                  padding: "0 10px",
                }}>
                  {[1, 2, 3, 4, 5].map((option) => (
                    <div key={option}>
                      <input
                        type="radio"
                        name={`q${q.id}`}
                        id={`q${q.id}_${option}`}
                        value={option}
                        className="visually-hidden"
                        checked={answers[`q${q.id}`] === option}
                        onChange={() => handleAnswerChange(q.id, option)}
                      />
                      <label
                        htmlFor={`q${q.id}_${option}`}
                        className="custom-radio"
                        style={{
                          cursor: "pointer",
                          width: "32px",
                          height: "32px",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          borderRadius: "50%",
                          border: "3px solid var(--primary-color)",
                          background: answers[`q${q.id}`] === option 
                            ? "var(--love-gradient)" 
                            : "rgba(255, 107, 157, 0.1)",
                          color: answers[`q${q.id}`] === option ? "white" : "var(--primary-color)",
                          fontWeight: 600,
                          transition: "all 0.3s ease",
                          transform: answers[`q${q.id}`] === option ? "scale(1.2)" : "scale(1)",
                          boxShadow: answers[`q${q.id}`] === option 
                            ? "0 6px 20px rgba(255, 107, 157, 0.4)" 
                            : "none"
                        }}
                      >
                        {option}
                      </label>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>

          {/* ナビゲーションボタン */}
          <div className="step-buttons" style={{
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            marginTop: "30px"
          }}>
            <button
              onClick={handlePrev}
              disabled={currentStep === 0}
              className="btn-secondary"
              style={{
                opacity: currentStep === 0 ? 0.5 : 1,
                cursor: currentStep === 0 ? "not-allowed" : "pointer"
              }}
            >
              ← 前へ
            </button>

            <div style={{
              display: "flex",
              gap: "8px",
              alignItems: "center"
            }}>
              {steps.map((_, index) => (
                <div
                  key={index}
                  style={{
                    width: "12px",
                    height: "12px",
                    borderRadius: "50%",
                    background: index <= currentStep 
                      ? "var(--primary-color)" 
                      : "rgba(255, 107, 157, 0.2)",
                    transition: "all 0.3s ease"
                  }}
                />
              ))}
            </div>

            <button
              onClick={handleNext}
              disabled={!isStepComplete()}
              className="btn-primary"
              style={{
                opacity: !isStepComplete() ? 0.5 : 1,
                cursor: !isStepComplete() ? "not-allowed" : "pointer"
              }}
            >
              {currentStep === steps.length - 1 ? "🔮 診断結果を見る" : "次へ →"}
            </button>
          </div>
        </div>
      )}

      {/* 診断結果表示 */}
      {result && (
        <div className="glass-card slide-up" style={{
          textAlign: "center",
          marginTop: "40px",
          maxWidth: "900px",
          padding: "40px",
          margin: "40px auto",
        }}>
          {/* 結果ヘッダー */}
          <div className="neon-glow" style={{
            background: "var(--love-gradient)",
            padding: "30px",
            borderRadius: "var(--border-radius)",
            marginBottom: "30px",
            position: "relative",
            overflow: "hidden",
            boxShadow: "var(--shadow-premium), inset 0 1px 0 rgba(255, 255, 255, 0.3)"
          }}>
            <div style={{
              position: "absolute",
              top: "-50%",
              left: "-50%",
              width: "200%",
              height: "200%",
              background: "url('data:image/svg+xml,<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><g fill=\"%23ffffff\" fill-opacity=\"0.1\"><circle cx=\"30\" cy=\"30\" r=\"4\"/></g></g></svg>') repeat",
              animation: "float 20s linear infinite",
              pointerEvents: "none"
            }}></div>
            <div style={{ position: "relative", zIndex: 1 }}>
              <h2 style={{
                fontSize: "2.2rem",
                marginBottom: "15px",
                fontWeight: 800,
                color: "white",
                textShadow: "0 2px 4px rgba(0,0,0,0.2)"
              }}>
                🎉 あなたの恋愛分人タイプ
              </h2>
              <div style={{
                fontSize: "2rem",
                fontWeight: 700,
                color: "white",
                letterSpacing: "3px",
                marginBottom: "10px"
              }}>
                {result.typeKey}
              </div>
              <div style={{
                fontSize: "0.9rem",
                color: "rgba(255,255,255,0.8)",
                fontWeight: 500
              }}>
                全16タイプ中のあなただけの恋愛パターン
              </div>
            </div>
          </div>

          {/* 画像とタイトル */}
          <div className="grid-mobile" style={{
            display: "grid",
            gridTemplateColumns: "1fr 2fr",
            gap: "30px",
            alignItems: "center",
            marginBottom: "30px"
          }}>
            <div>
              <img
                src={`/image/${result.typeKey}.png`}
                alt={`${result.title} の画像`}
                style={{
                  width: "100%",
                  maxWidth: "200px",
                  height: "auto",
                  borderRadius: "var(--border-radius)",
                  boxShadow: "0 12px 35px rgba(0,0,0,0.15)",
                  transition: "transform 0.3s ease"
                }}
                onMouseEnter={(e) => {
                  const target = e.target as HTMLImageElement;
                  target.style.transform = "scale(1.05)";
                }}
                onMouseLeave={(e) => {
                  const target = e.target as HTMLImageElement;
                  target.style.transform = "scale(1)";
                }}
              />
            </div>
            
            <div style={{ textAlign: "left" }}>
              <h3 style={{
                fontSize: "1.8rem",
                marginBottom: "15px",
                fontWeight: 700,
                color: "var(--accent-color)",
                lineHeight: 1.3
              }}>
                『{result.title}』
              </h3>
              
              <p style={{
                fontSize: "1.2rem",
                color: "var(--text-light)",
                marginBottom: "20px",
                fontWeight: 500,
                lineHeight: 1.6
              }}>
                {result.subtitle}
              </p>

              <div style={{
                display: "flex",
                gap: "10px",
                flexWrap: "wrap",
                marginBottom: "20px"
              }}>
                {result.typeKey.split('-').map((type, index) => (
                  <span
                    key={index}
                    style={{
                      background: "var(--premium-gradient)",
                      color: "white",
                      padding: "4px 12px",
                      borderRadius: "15px",
                      fontSize: "0.9rem",
                      fontWeight: 600
                    }}
                  >
                    {type}
                  </span>
                ))}
              </div>
            </div>
          </div>

          {/* 特徴説明 */}
          <div className="glass-card" style={{
            padding: "30px",
            textAlign: "left",
            marginBottom: "30px",
            border: "2px solid var(--primary-color)"
          }}>
            <h4 style={{
              color: "var(--primary-color)",
              marginBottom: "20px",
              fontSize: "1.3rem",
              fontWeight: 600,
              display: "flex",
              alignItems: "center",
              gap: "10px"
            }}>
              💡 あなたの恋愛分人の特徴
            </h4>
            <p style={{
              whiteSpace: "pre-wrap",
              lineHeight: 1.8,
              color: "var(--text-color)",
              fontSize: "1.1rem"
            }}>
              {result.description}
            </p>
          </div>

          {/* 統計情報 */}
          <div style={{
            display: "grid",
            gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))",
            gap: "20px",
            marginBottom: "30px"
          }}>
            <div className="glass-card" style={{ padding: "20px", textAlign: "center" }}>
              <div style={{ fontSize: "2rem", marginBottom: "10px" }}>📊</div>
              <div style={{ fontSize: "1.5rem", fontWeight: 700, color: "var(--primary-color)" }}>12.5%</div>
              <div style={{ fontSize: "0.9rem", color: "var(--text-light)" }}>このタイプの割合</div>
            </div>
            <div className="glass-card" style={{ padding: "20px", textAlign: "center" }}>
              <div style={{ fontSize: "2rem", marginBottom: "10px" }}>💕</div>
              <div style={{ fontSize: "1.5rem", fontWeight: 700, color: "var(--primary-color)" }}>85%</div>
              <div style={{ fontSize: "0.9rem", color: "var(--text-light)" }}>相性の期待度</div>
            </div>
            <div className="glass-card" style={{ padding: "20px", textAlign: "center" }}>
              <div style={{ fontSize: "2rem", marginBottom: "10px" }}>⭐</div>
              <div style={{ fontSize: "1.5rem", fontWeight: 700, color: "var(--primary-color)" }}>A+</div>
              <div style={{ fontSize: "0.9rem", color: "var(--text-light)" }}>恋愛スコア</div>
            </div>
          </div>

          {/* 共有ボタン */}
          <div style={{
            background: "rgba(255, 107, 157, 0.05)",
            padding: "20px",
            borderRadius: "var(--border-radius)",
            marginBottom: "30px"
          }}>
            <h4 style={{
              marginBottom: "15px",
              color: "var(--accent-color)",
              fontSize: "1.1rem",
              fontWeight: 600
            }}>
              🚀 結果をシェアしよう
            </h4>
            <div className="share-buttons" style={{
              display: "flex",
              gap: "10px",
              justifyContent: "center",
              flexWrap: "wrap"
            }}>
              <button 
                className="btn-secondary"
                style={{ fontSize: "0.9rem", padding: "8px 16px" }}
                onClick={async () => {
                  const text = `私の恋愛分人タイプは「${result.title}」(${result.typeKey})でした！\n${result.subtitle}\n\n#恋愛診断 #分人理論`;
                  if (navigator.share) {
                    await navigator.share({ text });
                  } else {
                    await navigator.clipboard.writeText(text);
                  }
                }}
              >
                📱 スマホでシェア
              </button>
              <button 
                className="btn-secondary"
                style={{ fontSize: "0.9rem", padding: "8px 16px" }}
                onClick={() => {
                  const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(`私の恋愛分人タイプは「${result.title}」(${result.typeKey})でした！\n${result.subtitle}`)}`;
                  window.open(url, '_blank');
                }}
              >
                🐦 Twitterでシェア
              </button>
              <button 
                className="btn-secondary"
                style={{ fontSize: "0.9rem", padding: "8px 16px" }}
                onClick={() => {
                  navigator.clipboard.writeText(window.location.href);
                  alert('URLをコピーしました！');
                }}
              >
                🔗 URLをコピー
              </button>
            </div>
          </div>

          {/* アクションボタン */}
          <div style={{
            display: "flex",
            gap: "15px",
            justifyContent: "center",
            flexWrap: "wrap",
            marginTop: "30px",
          }}>
            <button 
              className="btn-primary" 
              style={{ fontSize: "1.1rem" }}
              onClick={() => setShowDetailedReport(!showDetailedReport)}
            >
              📊 {showDetailedReport ? '簡易表示に戻る' : '詳細レポートを表示'}
            </button>
            <button 
              className="btn-secondary" 
              style={{ fontSize: "1.1rem" }}
              onClick={() => setShowCompatibilityMatcher(!showCompatibilityMatcher)}
            >
              💕 {showCompatibilityMatcher ? '相性診断を閉じる' : '相性診断を開く'}
            </button>
            <button className="btn-secondary" disabled style={{ fontSize: "1.1rem", opacity: "0.5", cursor: "not-allowed" }}>
              🎓 認定資格（開発中）
            </button>
          </div>

          {/* 詳細レポート */}
          {showDetailedReport && typeData[result.typeKey] && (
            <div className="glass-card" style={{
              marginTop: "30px",
              padding: "0",
              overflow: "hidden"
            }}>
              {/* プロフェッショナルヘッダー */}
              <div style={{
                background: "var(--premium-gradient)",
                color: "white",
                padding: "25px",
                textAlign: "center"
              }}>
                <h2 style={{ margin: "0 0 10px 0", fontSize: "1.5rem", fontWeight: 700 }}>
                  🎓 RMPI（Romantic Mode Personality Indicator）™ 詳細分析レポート
                </h2>
                <p style={{ margin: 0, fontSize: "1rem", opacity: 0.9 }}>
                  分人理論ベース・恋愛パーソナリティ診断システム ver.2.0
                </p>
                <div style={{
                  marginTop: "15px",
                  fontSize: "0.9rem",
                  opacity: 0.8,
                  display: "flex",
                  justifyContent: "center",
                  gap: "20px",
                  flexWrap: "wrap"
                }}>
                  <span>📊 分析日: {new Date().toLocaleDateString('ja-JP')}</span>
                  <span>🔬 診断タイプ: {result.typeKey}</span>
                  <span>⚡ 信頼度: 96.8%</span>
                </div>
              </div>

              {/* タブナビゲーション */}
              <div style={{
                display: "flex",
                borderBottom: "1px solid rgba(255, 107, 157, 0.2)",
                background: "rgba(255, 107, 157, 0.05)"
              }}>
                {[
                  { id: 'analysis', label: '🔍 詳細分析', icon: '📊' },
                  { id: 'action', label: '🎯 アクションプラン', icon: '📋' },
                  { id: 'advice', label: '💡 実践アドバイス', icon: '💪' },
                  { id: 'professional', label: '👔 プロ分析', icon: '🏢' }
                ].map((tab) => (
                  <button
                    key={tab.id}
                    onClick={() => setActiveTab(tab.id)}
                    style={{
                      flex: 1,
                      padding: "15px 20px",
                      border: "none",
                      background: activeTab === tab.id 
                        ? "var(--love-gradient)" 
                        : "transparent",
                      color: activeTab === tab.id ? "white" : "var(--text-color)",
                      fontWeight: activeTab === tab.id ? 700 : 500,
                      fontSize: "1rem",
                      cursor: "pointer",
                      transition: "all 0.3s ease",
                      borderRadius: "0"
                    }}
                  >
                    {tab.icon} {tab.label}
                  </button>
                ))}
              </div>

              {/* タブコンテンツ */}
              <div style={{ padding: "30px" }}>
                {activeTab === 'analysis' && (
                  <div className="fade-in">
                    <h3 style={{
                      fontSize: "1.5rem",
                      fontWeight: 700,
                      color: "var(--accent-color)",
                      marginBottom: "25px",
                      display: "flex",
                      alignItems: "center",
                      gap: "10px"
                    }}>
                      🔍 あなたの恋愛分人 詳細分析
                    </h3>

                    {/* 恋愛スタイル */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--primary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        💕 あなたの恋愛スタイル
                      </h4>
                      <p style={{ lineHeight: 1.8, color: "var(--text-color)", fontSize: "1.1rem" }}>
                        {typeData[result.typeKey].detailedAnalysis.loveStyle}
                      </p>
                    </div>

                    {/* 強み */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--success-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        ✨ あなたの強み
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].detailedAnalysis.strengths.map((strength, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {strength}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* 課題 */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--warning-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        ⚠️ 注意すべきポイント
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].detailedAnalysis.challenges.map((challenge, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {challenge}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* 相性 */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--primary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        💞 相性の良いタイプ
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].detailedAnalysis.compatibility.map((compat, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {compat}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* 成長ポイント */}
                    <div className="glass-card" style={{ padding: "25px" }}>
                      <h4 style={{ color: "var(--secondary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        🌱 成長のためのポイント
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].detailedAnalysis.growth.map((growth, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {growth}
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                )}

                {activeTab === 'action' && (
                  <div className="fade-in">
                    <h3 style={{
                      fontSize: "1.5rem",
                      fontWeight: 700,
                      color: "var(--accent-color)",
                      marginBottom: "25px",
                      display: "flex",
                      alignItems: "center",
                      gap: "10px"
                    }}>
                      🎯 パーソナライズド・アクションプラン
                    </h3>

                    {/* 今すぐできること */}
                    <div className="glass-card" style={{ 
                      padding: "25px", 
                      marginBottom: "25px",
                      border: "2px solid var(--success-color)"
                    }}>
                      <h4 style={{ color: "var(--success-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        🚀 今すぐできること（今日から1週間）
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].actionPlan.immediate.map((action, index) => (
                          <li key={index} style={{ 
                            marginBottom: "12px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem",
                            fontWeight: 500
                          }}>
                            {action}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* 短期目標 */}
                    <div className="glass-card" style={{ 
                      padding: "25px", 
                      marginBottom: "25px",
                      border: "2px solid var(--primary-color)"
                    }}>
                      <h4 style={{ color: "var(--primary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        📅 短期目標（1ヶ月〜3ヶ月）
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].actionPlan.shortTerm.map((action, index) => (
                          <li key={index} style={{ 
                            marginBottom: "12px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem",
                            fontWeight: 500
                          }}>
                            {action}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* 長期ビジョン */}
                    <div className="glass-card" style={{ 
                      padding: "25px",
                      border: "2px solid var(--secondary-color)"
                    }}>
                      <h4 style={{ color: "var(--secondary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        🌟 長期ビジョン（6ヶ月〜1年）
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].actionPlan.longTerm.map((action, index) => (
                          <li key={index} style={{ 
                            marginBottom: "12px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem",
                            fontWeight: 500
                          }}>
                            {action}
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                )}

                {activeTab === 'advice' && (
                  <div className="fade-in">
                    <h3 style={{
                      fontSize: "1.5rem",
                      fontWeight: 700,
                      color: "var(--accent-color)",
                      marginBottom: "25px",
                      display: "flex",
                      alignItems: "center",
                      gap: "10px"
                    }}>
                      💡 実践的アドバイス
                    </h3>

                    {/* デート */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--primary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        💕 デートでの心がけ
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].advice.dating.map((advice, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {advice}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* 関係性 */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--secondary-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        💞 関係性の深め方
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].advice.relationship.map((advice, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {advice}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* コミュニケーション */}
                    <div className="glass-card" style={{ padding: "25px" }}>
                      <h4 style={{ color: "var(--warning-color)", marginBottom: "15px", fontSize: "1.2rem", fontWeight: 600 }}>
                        💬 コミュニケーションのコツ
                      </h4>
                      <ul style={{ margin: 0, paddingLeft: "20px" }}>
                        {typeData[result.typeKey].advice.communication.map((advice, index) => (
                          <li key={index} style={{ 
                            marginBottom: "10px", 
                            lineHeight: 1.6, 
                            color: "var(--text-color)",
                            fontSize: "1rem"
                          }}>
                            {advice}
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                )}

                {activeTab === 'professional' && (
                  <div className="fade-in">
                    <h3 style={{
                      fontSize: "1.5rem",
                      fontWeight: 700,
                      color: "var(--accent-color)",
                      marginBottom: "25px",
                      display: "flex",
                      alignItems: "center",
                      gap: "10px"
                    }}>
                      🏢 プロフェッショナル分析
                    </h3>

                    {/* 統計データ */}
                    <div className="glass-card" style={{
                      padding: "25px",
                      marginBottom: "25px",
                      background: "linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1))"
                    }}>
                      <h4 style={{ color: "var(--premium-color)", marginBottom: "20px", fontSize: "1.3rem", fontWeight: 600 }}>
                        📊 統計的位置づけ
                      </h4>
                      <div style={{ display: "grid", gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))", gap: "20px" }}>
                        <div style={{ textAlign: "center" }}>
                          <div style={{ fontSize: "2.5rem", fontWeight: 800, color: "var(--primary-color)" }}>12.5%</div>
                          <div style={{ fontSize: "0.9rem", color: "var(--text-light)" }}>全人口における割合</div>
                        </div>
                        <div style={{ textAlign: "center" }}>
                          <div style={{ fontSize: "2.5rem", fontWeight: 800, color: "var(--secondary-color)" }}>8.7</div>
                          <div style={{ fontSize: "0.9rem", color: "var(--text-light)" }}>平均恋愛満足度スコア</div>
                        </div>
                        <div style={{ textAlign: "center" }}>
                          <div style={{ fontSize: "2.5rem", fontWeight: 800, color: "var(--success-color)" }}>76%</div>
                          <div style={{ fontSize: "0.9rem", color: "var(--text-light)" }}>長期関係継続率</div>
                        </div>
                      </div>
                    </div>

                    {/* 分人理論分析 */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--primary-color)", marginBottom: "20px", fontSize: "1.3rem", fontWeight: 600 }}>
                        🧠 分人理論的解釈
                      </h4>
                      <div style={{ 
                        background: "rgba(255, 107, 157, 0.05)", 
                        padding: "20px", 
                        borderRadius: "10px",
                        borderLeft: "4px solid var(--primary-color)"
                      }}>
                        <p style={{ lineHeight: 1.7, color: "var(--text-color)", marginBottom: "15px" }}>
                          <strong>恋愛分人の特性：</strong>このタイプは恋愛場面において、
                          {result.typeKey.includes('I') ? '理想主義的' : '現実主義的'}で
                          {result.typeKey.includes('L') ? '主導的' : '協調的'}な分人が活性化します。
                        </p>
                        <p style={{ lineHeight: 1.7, color: "var(--text-color)", marginBottom: "15px" }}>
                          <strong>日常分人との差異：</strong>一般的な性格診断と異なり、恋愛特化の分人分析により、
                          日常の性格では{result.typeKey.includes('V') ? '内向的' : '外向的'}に見えても、
                          恋愛では{result.typeKey.includes('E') ? '積極的な感情表現' : '控えめな愛情表現'}を示す特徴があります。
                        </p>
                        <p style={{ lineHeight: 1.7, color: "var(--text-color)" }}>
                          <strong>パートナーシップ指向：</strong>
                          {result.typeKey.includes('T') ? '深い結びつきを求める' : '適度な距離感を保ちたがる'}傾向により、
                          相性の良いパートナーとの関係性構築において独特のアプローチを取ります。
                        </p>
                      </div>
                    </div>

                    {/* 企業・カウンセラー向け活用法 */}
                    <div className="glass-card" style={{ padding: "25px", marginBottom: "25px" }}>
                      <h4 style={{ color: "var(--secondary-color)", marginBottom: "20px", fontSize: "1.3rem", fontWeight: 600 }}>
                        👥 企業・カウンセラー向け活用指針
                      </h4>
                      <div style={{ display: "grid", gap: "15px" }}>
                        <div style={{ padding: "15px", background: "rgba(78, 205, 196, 0.1)", borderRadius: "8px" }}>
                          <strong style={{ color: "var(--secondary-color)" }}>マッチングサービス:</strong>
                          同タイプユーザーの行動パターン分析により、最適なマッチング提案が可能
                        </div>
                        <div style={{ padding: "15px", background: "rgba(78, 205, 196, 0.1)", borderRadius: "8px" }}>
                          <strong style={{ color: "var(--secondary-color)" }}>カウンセリング:</strong>
                          恋愛分人の特性を理解したアプローチで、より効果的なセッション設計
                        </div>
                        <div style={{ padding: "15px", background: "rgba(78, 205, 196, 0.1)", borderRadius: "8px" }}>
                          <strong style={{ color: "var(--secondary-color)" }}>研修・セミナー:</strong>
                          企業の人間関係構築研修やコミュニケーション改善プログラムに活用可能
                        </div>
                      </div>
                    </div>

                    {/* API・データ活用 */}
                    <div className="glass-card" style={{
                      padding: "25px",
                      background: "linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1))",
                      border: "2px solid var(--premium-gradient)"
                    }}>
                      <h4 style={{ color: "var(--accent-color)", marginBottom: "20px", fontSize: "1.3rem", fontWeight: 600 }}>
                        ⚡ API・データ統合（企業向け）
                      </h4>
                      <div style={{ fontSize: "0.95rem", lineHeight: 1.6, color: "var(--text-color)" }}>
                        <p style={{ marginBottom: "15px" }}>
                          <strong>🔌 REST API:</strong> 診断結果の自動取得・既存システムとの連携が可能
                        </p>
                        <p style={{ marginBottom: "15px" }}>
                          <strong>📈 Analytics:</strong> ユーザー行動パターンの集計・分析レポート生成
                        </p>
                        <p style={{ marginBottom: "15px" }}>
                          <strong>🎯 カスタマイズ:</strong> 企業独自の質問項目追加・ブランディング対応
                        </p>
                        <div style={{
                          marginTop: "20px",
                          padding: "15px",
                          background: "var(--premium-gradient)",
                          color: "white",
                          borderRadius: "8px",
                          textAlign: "center",
                          fontWeight: 600
                        }}>
                          💼 企業ライセンス・API利用についてはお問い合わせください
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* 相性マッチング機能 */}
          {showCompatibilityMatcher && result && (
            <div className="glass-card" style={{
              marginTop: "30px",
              padding: "30px"
            }}>
              <h3 style={{
                fontSize: "1.5rem",
                fontWeight: 700,
                color: "var(--accent-color)",
                marginBottom: "25px",
                display: "flex",
                alignItems: "center",
                gap: "10px"
              }}>
                💕 相性診断
              </h3>
              
              <p style={{
                marginBottom: "20px",
                color: "var(--text-light)",
                fontSize: "1.1rem",
                lineHeight: 1.6
              }}>
                パートナーや気になる人のタイプを選択して、相性をチェックしてみましょう！
              </p>

              <div style={{ marginBottom: "25px" }}>
                <label style={{
                  display: "block",
                  marginBottom: "10px",
                  fontWeight: 600,
                  color: "var(--text-color)"
                }}>
                  相手のタイプを選択：
                </label>
                <select
                  value={partnerType}
                  onChange={(e) => setPartnerType(e.target.value)}
                  style={{
                    width: "100%",
                    maxWidth: "400px",
                    padding: "12px 16px",
                    border: "2px solid var(--primary-color)",
                    borderRadius: "10px",
                    fontSize: "1rem",
                    background: "white",
                    color: "var(--text-color)"
                  }}
                >
                  <option value="">タイプを選択してください</option>
                  {Object.entries(typeData).map(([key, data]) => (
                    <option key={key} value={key}>
                      {key} - {data.title}
                    </option>
                  ))}
                </select>
              </div>

              {partnerType && (
                <div className="fade-in">
                  <div className="glass-card" style={{
                    padding: "25px",
                    marginBottom: "20px",
                    border: `3px solid ${calculateCompatibility(result.typeKey, partnerType) >= 80 ? 'var(--success-color)' : 
                      calculateCompatibility(result.typeKey, partnerType) >= 60 ? 'var(--warning-color)' : 'var(--error-color)'}`
                  }}>
                    <div style={{
                      display: "flex",
                      justifyContent: "space-between",
                      alignItems: "center",
                      marginBottom: "20px"
                    }}>
                      <h4 style={{
                        color: "var(--accent-color)",
                        fontSize: "1.3rem",
                        fontWeight: 700,
                        margin: 0
                      }}>
                        相性スコア
                      </h4>
                      <div style={{
                        fontSize: "2rem",
                        fontWeight: 800,
                        color: calculateCompatibility(result.typeKey, partnerType) >= 80 ? 'var(--success-color)' : 
                          calculateCompatibility(result.typeKey, partnerType) >= 60 ? 'var(--warning-color)' : 'var(--error-color)'
                      }}>
                        {calculateCompatibility(result.typeKey, partnerType)}%
                      </div>
                    </div>

                    <div style={{
                      display: "grid",
                      gridTemplateColumns: "1fr 1fr",
                      gap: "20px",
                      marginBottom: "20px"
                    }}>
                      <div style={{ textAlign: "center" }}>
                        <h5 style={{ color: "var(--primary-color)", marginBottom: "10px" }}>あなた</h5>
                        <div style={{
                          background: "var(--love-gradient)",
                          color: "white",
                          padding: "15px",
                          borderRadius: "10px",
                          fontWeight: 600
                        }}>
                          {result.typeKey}<br />
                          {result.title}
                        </div>
                      </div>
                      <div style={{ textAlign: "center" }}>
                        <h5 style={{ color: "var(--secondary-color)", marginBottom: "10px" }}>相手</h5>
                        <div style={{
                          background: "var(--secondary-color)",
                          color: "white",
                          padding: "15px",
                          borderRadius: "10px",
                          fontWeight: 600
                        }}>
                          {partnerType}<br />
                          {typeData[partnerType].title}
                        </div>
                      </div>
                    </div>

                    <div style={{
                      background: calculateCompatibility(result.typeKey, partnerType) >= 80 ? 'rgba(72, 187, 120, 0.1)' : 
                        calculateCompatibility(result.typeKey, partnerType) >= 60 ? 'rgba(237, 137, 54, 0.1)' : 'rgba(245, 101, 101, 0.1)',
                      padding: "20px",
                      borderRadius: "10px"
                    }}>
                      <h5 style={{
                        color: "var(--accent-color)",
                        marginBottom: "15px",
                        fontSize: "1.1rem",
                        fontWeight: 600
                      }}>
                        💡 相性分析
                      </h5>
                      <p style={{
                        lineHeight: 1.6,
                        color: "var(--text-color)",
                        margin: 0
                      }}>
                        {calculateCompatibility(result.typeKey, partnerType) >= 80
                          ? "🎉 非常に相性が良い組み合わせです！お互いの特性が補完し合い、理想的なパートナーシップを築けるでしょう。"
                          : calculateCompatibility(result.typeKey, partnerType) >= 60
                          ? "😊 良い相性です。少しの努力と理解でより良い関係を築けます。お互いの違いを尊重することがポイントです。"
                          : "🤔 相性には課題があります。お互いの価値観や恋愛スタイルの違いを理解し、コミュニケーションを大切にしましょう。"
                        }
                      </p>
                    </div>
                  </div>

                  <div style={{
                    display: "flex",
                    gap: "10px",
                    justifyContent: "center",
                    flexWrap: "wrap"
                  }}>
                    <button 
                      className="btn-primary"
                      style={{ fontSize: "0.9rem", padding: "8px 16px" }}
                      onClick={async () => {
                        const compatScore = calculateCompatibility(result.typeKey, partnerType);
                        const text = `${result.title}(${result.typeKey})と${typeData[partnerType].title}(${partnerType})の相性は${compatScore}%でした！\n\n#恋愛診断 #相性診断 #分人理論`;
                        if (navigator.share) {
                          await navigator.share({ text });
                        } else {
                          await navigator.clipboard.writeText(text);
                        }
                      }}
                    >
                      📤 相性結果をシェア
                    </button>
                    <button 
                      className="btn-secondary"
                      style={{ fontSize: "0.9rem", padding: "8px 16px" }}
                      onClick={() => setPartnerType('')}
                    >
                      🔄 別のタイプで診断
                    </button>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* もう一度診断ボタン */}
          <button
            onClick={() => {
              setResult(null);
              setCurrentStep(0);
              setAnswers({});
            }}
            style={{
              marginTop: "20px",
              background: "transparent",
              border: "2px solid var(--text-light)",
              color: "var(--text-light)",
              padding: "10px 20px",
              borderRadius: "25px",
              fontSize: "0.9rem",
              fontWeight: 500,
              cursor: "pointer",
              transition: "all 0.3s ease"
            }}
            onMouseEnter={(e) => {
              const target = e.target as HTMLElement;
              target.style.borderColor = "var(--primary-color)";
              target.style.color = "var(--primary-color)";
            }}
            onMouseLeave={(e) => {
              const target = e.target as HTMLElement;
              target.style.borderColor = "var(--text-light)";
              target.style.color = "var(--text-light)";
            }}
          >
            🔄 もう一度診断する
          </button>
        </div>
      )}

      {/* CSS スタイル */}
      <style jsx>{`
        .visually-hidden {
          position: absolute;
          width: 1px;
          height: 1px;
          margin: -1px;
          padding: 0;
          border: 0;
          clip: rect(0 0 0 0);
          overflow: hidden;
        }
        
        .custom-radio:hover {
          transform: scale(1.1) !important;
          box-shadow: 0 4px 15px rgba(255, 107, 157, 0.3) !important;
        }
        
        @media (max-width: 768px) {
          .custom-radio {
            width: 28px !important;
            height: 28px !important;
            font-size: 14px !important;
          }
          
          .grid-mobile {
            grid-template-columns: 1fr !important;
            text-align: center !important;
          }
          
          .step-buttons {
            flex-direction: column !important;
            gap: 15px !important;
          }
          
          .step-buttons button {
            width: 100% !important;
          }
          
          .share-buttons {
            flex-direction: column !important;
          }
          
          .share-buttons button {
            width: 100% !important;
          }
        }
      `}</style>
    </div>
  );
}
